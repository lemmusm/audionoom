{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/media/betty/740eb11b-c677-43cf-84f1-0453faa34e51/betty/ESTUDIOS/REACT/NEXT-JS/audionoom/pages/channel.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport css from './styles.scss';\nimport Layout from '../components/Layout';\nimport Podcast from '../components/Podcasts';\nimport PodcastsPlayer from '../components/PodcastPlayer';\nimport Error from './_error';\n\nclass channel extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      openPodcast: null\n    });\n\n    _defineProperty(this, \"openPodcast\", (e, podcast) => {\n      e.preventDefault();\n      this.setState({\n        openPodcast: podcast\n      });\n    });\n\n    _defineProperty(this, \"onClosePodcast\", e => {\n      e.preventDefault();\n      this.setState({\n        openPodcast: null\n      });\n    });\n  }\n\n  static async getInitialProps({\n    query,\n    res\n  }) {\n    let idChannel = query.id;\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await _Promise.all([fetch(`https://api.audioboom.com/channels/${idChannel}`), fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`), fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)]);\n\n      if (reqChannel.status >= 400) {\n        res.statusCode = reqChannel.status;\n        return {\n          channel: null,\n          audio_clips: null,\n          series: null,\n          statusCode: reqChannel.status\n        };\n      }\n\n      let dataChannel = await reqChannel.json();\n      let channel = dataChannel.body.channel;\n      let dataAudios = await reqAudios.json();\n      let audios = dataAudios.body.audio_clips;\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      return {\n        channel,\n        audios,\n        series,\n        statusCode\n      };\n    } catch (e) {\n      return {\n        channel: null,\n        audioClips: null,\n        series: null,\n        statusCode: 503\n      };\n    }\n  }\n\n  render() {\n    const {\n      channel,\n      audioClips,\n      series,\n      statusCode\n    } = this.props;\n    const openPodcast = this.state;\n\n    if (statusCode !== 200) {\n      return __jsx(Error, {\n        statusCode: statusCode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    }\n\n    return __jsx(Layout, {\n      title: channel.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, openPodcast && __jsx(\"div\", {\n      className: css.modal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, __jsx(PodcastsPlayer, {\n      clip: openPodcast,\n      onClose: this.onClosePodcast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, channel.title), series.length > 0 && __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Series\"), __jsx(\"div\", {\n      className: css.channels,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, series.map(serie => __jsx(Link, {\n      href: `/channel?id=${serie.id}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      className: css.channel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: Channel.urls.original,\n      alt: channel.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, channel.title)))))), __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Ultimos Podcasts\"), __jsx(Podcast, {\n      podcasts: audioClips,\n      onClickPodcast: this.openPodcast,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default channel;","map":{"version":3,"sources":["/media/betty/740eb11b-c677-43cf-84f1-0453faa34e51/betty/ESTUDIOS/REACT/NEXT-JS/audionoom/pages/channel.js"],"names":["React","Component","css","Layout","Podcast","PodcastsPlayer","Error","channel","openPodcast","e","podcast","preventDefault","setState","getInitialProps","query","res","idChannel","id","reqChannel","reqSeries","reqAudios","all","fetch","status","statusCode","audio_clips","series","dataChannel","json","body","dataAudios","audios","dataSeries","channels","audioClips","render","props","state","title","modal","onClosePodcast","length","map","serie","Channel","urls","original"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;;AAAA,mCACxB;AACJO,MAAAA,WAAW,EAAC;AADR,KADwB;;AAAA,yCAIhB,CAACC,CAAD,EAAIC,OAAJ,KAAgB;AAC5BD,MAAAA,CAAC,CAACE,cAAF;AACA,WAAKC,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAACE;AADA,OAAd;AAGD,KAT6B;;AAAA,4CAUbD,CAAC,IAAG;AACnBA,MAAAA,CAAC,CAACE,cAAF;AACA,WAAKC,QAAL,CAAc;AACZJ,QAAAA,WAAW,EAAC;AADA,OAAd;AAGD,KAf6B;AAAA;;AAgB9B,eAAaK,eAAb,CAA6B;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,GAA7B,EAA0C;AACxC,QAAIC,SAAS,GAAGF,KAAK,CAACG,EAAtB;;AACA,QAAG;AACD,UAAI,CAACC,UAAD,EAAaC,SAAb,EAAwBC,SAAxB,IAAqC,MAAM,SAAQC,GAAR,CAAY,CACzDC,KAAK,CAAE,sCAAqCN,SAAU,EAAjD,CADoD,EAEzDM,KAAK,CAAE,sCAAqCN,SAAU,iBAAjD,CAFoD,EAGzDM,KAAK,CAAE,sCAAqCN,SAAU,cAAjD,CAHoD,CAAZ,CAA/C;;AAKA,UAAGE,UAAU,CAACK,MAAX,IAAqB,GAAxB,EAA4B;AAC1BR,QAAAA,GAAG,CAACS,UAAJ,GAAiBN,UAAU,CAACK,MAA5B;AACA,eAAM;AACJhB,UAAAA,OAAO,EAAC,IADJ;AAEJkB,UAAAA,WAAW,EAAC,IAFR;AAGJC,UAAAA,MAAM,EAAC,IAHH;AAIJF,UAAAA,UAAU,EAAEN,UAAU,CAACK;AAJnB,SAAN;AAMD;;AACD,UAAII,WAAW,GAAG,MAAMT,UAAU,CAACU,IAAX,EAAxB;AACA,UAAIrB,OAAO,GAAGoB,WAAW,CAACE,IAAZ,CAAiBtB,OAA/B;AAEA,UAAIuB,UAAU,GAAG,MAAMV,SAAS,CAACQ,IAAV,EAAvB;AACA,UAAIG,MAAM,GAAGD,UAAU,CAACD,IAAX,CAAgBJ,WAA7B;AAEA,UAAIO,UAAU,GAAG,MAAMb,SAAS,CAACS,IAAV,EAAvB;AACA,UAAIF,MAAM,GAAGM,UAAU,CAACH,IAAX,CAAgBI,QAA7B;AACA,aAAM;AACJ1B,QAAAA,OADI;AACIwB,QAAAA,MADJ;AACWL,QAAAA,MADX;AACmBF,QAAAA;AADnB,OAAN;AAGD,KA1BD,CA0BE,OAAMf,CAAN,EAAQ;AACR,aAAO;AAAEF,QAAAA,OAAO,EAAE,IAAX;AAAiB2B,QAAAA,UAAU,EAAE,IAA7B;AAAmCR,QAAAA,MAAM,EAAE,IAA3C;AAAiDF,QAAAA,UAAU,EAAE;AAA7D,OAAP;AACD;AACF;;AACDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAC5B,MAAAA,OAAD;AAAU2B,MAAAA,UAAV;AAAsBR,MAAAA,MAAtB;AAA8BF,MAAAA;AAA9B,QAA4C,KAAKY,KAAvD;AACA,UAAM5B,WAAW,GAAG,KAAK6B,KAAzB;;AACA,QAAGb,UAAU,KAAI,GAAjB,EAAqB;AACnB,aAAO,MAAC,KAAD;AAAO,QAAA,UAAU,EAAEA,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAEjB,OAAO,CAAC+B,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI9B,WAAW,IACX;AAAK,MAAA,SAAS,EAAEN,GAAG,CAACqC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD;AACE,MAAA,IAAI,EAAE/B,WADR;AAEE,MAAA,OAAO,EAAE,KAAKgC,cAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHJ,EAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMjC,OAAO,CAAC+B,KAAd,CAVA,EAYEZ,MAAM,CAACe,MAAP,GAAgB,CAAhB,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,MAAA,SAAS,EAAEvC,GAAG,CAAC+B,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIP,MAAM,CAACgB,GAAP,CAAWC,KAAK,IACd,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,eAAcA,KAAK,CAAC1B,EAAG,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAEf,GAAG,CAACK,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,GAAG,EAAEqC,OAAO,CAACC,IAAR,CAAaC,QAAvB;AAAiC,MAAA,GAAG,EAAEvC,OAAO,CAAC+B,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK/B,OAAO,CAAC+B,KAAb,CAFA,CADF,CADF,CAFJ,CAFF,CAbF,EA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA5BF,EA6BE,MAAC,OAAD;AACE,MAAA,QAAQ,EAAEJ,UADZ;AAEE,MAAA,cAAc,EAAE,KAAK1B,WAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,CADF;AAoCD;;AA1F6B;;AA4FhC,eAAeD,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport css from './styles.scss'\nimport Layout from '../components/Layout'\nimport Podcast from '../components/Podcasts'\nimport PodcastsPlayer from '../components/PodcastPlayer'\nimport Error from './_error';\n\nclass channel extends Component {\n  state={\n    openPodcast:null\n  }\n  openPodcast = (e, podcast) => {\n    e.preventDefault();\n    this.setState({\n      openPodcast:podcast\n    })\n  }\n  onClosePodcast = e =>{\n    e.preventDefault();\n    this.setState({\n      openPodcast:null\n    })\n  }\n  static async getInitialProps({query, res}){\n    let idChannel = query.id;\n    try{\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n      ])\n      if(reqChannel.status >= 400){\n        res.statusCode = reqChannel.status\n        return{\n          channel:null,\n          audio_clips:null,\n          series:null,\n          statusCode: reqChannel.status\n        }\n      }\n      let dataChannel = await reqChannel.json()\n      let channel = dataChannel.body.channel;\n\n      let dataAudios = await reqAudios.json()\n      let audios = dataAudios.body.audio_clips;\n\n      let dataSeries = await reqSeries.json();\n      let series = dataSeries.body.channels;\n      return{\n        channel,audios,series, statusCode\n      }\n    } catch(e){\n      return { channel: null, audioClips: null, series: null, statusCode: 503 }\n    }\n  }\n  render() {\n    const {channel, audioClips, series, statusCode} = this.props\n    const openPodcast = this.state;\n    if(statusCode !==200){\n      return <Error statusCode={statusCode}/>\n    }\n    return (\n      <Layout title={channel.title}>\n        {\n          openPodcast && \n          <div className={css.modal}>\n            <PodcastsPlayer\n              clip={openPodcast}\n              onClose={this.onClosePodcast}\n            />\n          </div>\n        }\n      <h1>{ channel.title }</h1>\n\n       {series.length > 0  &&\n        <div>\n          <h2>Series</h2>\n          <div className={css.channels}>\n            {\n              series.map(serie =>(\n                <Link href={`/channel?id=${serie.id}`}>\n                  <a className={css.channel}>\n                  <img src={Channel.urls.original} alt={channel.title}/>\n                  <h2>{channel.title}</h2>\n                  </a>\n                </Link>\n              ))}\n          </div>\n        </div>\n       }\n        <h2>Ultimos Podcasts</h2>\n        <Podcast\n          podcasts={audioClips}\n          onClickPodcast={this.openPodcast}\n        />\n      </Layout>\n    )\n  }\n}\nexport default channel"]},"metadata":{},"sourceType":"module"}